JDK实现动态代理
	实现接口 InvocationHandler
	
	重写  invoke 方法 
	
	注意点： 反射调用对象的时候，不用使用 proxy 对象 ，使用目标对象target对象
	
	
	
使用：
		1. 先创建目标 对象
		2. 创建代理对象 （jdk提供的方法 proxy.newProxyInstance (...)）	
		3.使用代理对对象调用方法 （强转）
		
		
特别注意：
	JDK 实现动态代理：目标对象必须有接口实现
	
	
	
====================================================================

Cglib 动态代理
	
	
	
	
面试：
	1、 代理模式？ 
		静态代理  ---> 什么改善地方？  ----> 动态代理 ？
		
		动态代理实现方式？
			JDK实现InvocationHandler 实现
			Cglib实现 MethodInMethodInterceptor 实现
		
		两种实现方式 ，那种最优？
			区别？
				JDK实现的时候，目标对象必须有接口实现，采用“实现”模式 在生成代理对象传递 目标对象的 接口 
				Cglib实现， 目标对象没有特定要求。 采用是“继承”模式来时实现
				
				与jdk提供的代理区别，jdkProxy：委托类必须有接口，制作过程比较快，执行慢；
				cglib：委托类可以没有接口，继承的思维来实现相似性，制作代理过程比较慢，执行快。
				主要解决没有接口类的代理实现
				
		
		Spring 在Aop采用的哪一种？
			采用两种。
			
			
		如何使用动态代理 实现aop实现的？ 
			
					
				
			
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	